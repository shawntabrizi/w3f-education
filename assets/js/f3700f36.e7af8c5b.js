"use strict";(self.webpackChunkw3f_education=self.webpackChunkw3f_education||[]).push([[5466],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),d=i,m=p["".concat(s,".").concat(d)]||p[d]||h[d]||a;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9965:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const a={id:"benchmarking",title:"Introduction to Benchmarking",sidebar_label:"Introduction to Benchmarking",description:"A basic introduction to benchmarking in FRAME"},o=void 0,c={unversionedId:"Substrate/section8/benchmarking",id:"Substrate/section8/benchmarking",title:"Introduction to Benchmarking",description:"A basic introduction to benchmarking in FRAME",source:"@site/docs/Substrate/section8/benchmarking.md",sourceDirName:"Substrate/section8",slug:"/Substrate/section8/benchmarking",permalink:"/docs/Substrate/section8/benchmarking",draft:!1,editUrl:"https://github.com/w3f/w3f-education/edit/main/docs/Substrate/section8/benchmarking.md",tags:[],version:"current",lastUpdatedBy:"Bader Youssef",lastUpdatedAt:1688168217,formattedLastUpdatedAt:"Jun 30, 2023",frontMatter:{id:"benchmarking",title:"Introduction to Benchmarking",sidebar_label:"Introduction to Benchmarking",description:"A basic introduction to benchmarking in FRAME"},sidebar:"substrate",previous:{title:"Chain Specification",permalink:"/docs/Substrate/section8/chain-genesis-spec"}},s={},l=[{value:"Weights in Substrate",id:"weights-in-substrate",level:2},{value:"An Introduction to Benchmarking",id:"an-introduction-to-benchmarking",level:2},{value:"Example: Baseline Benchmark for <code>register</code>",id:"example-baseline-benchmark-for-register",level:3}],u={toc:l},p="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This section will touch briefly on the concept weights and benchmarking in Substrate.  While this section will not go in-depth, any Substrate developer should know it when developing a pallet.  In the long run, producing production-ready pallets will become crucial."),(0,i.kt)("h2",{id:"weights-in-substrate"},"Weights in Substrate"),(0,i.kt)("p",null,"Until now, fees have not been a concern for our Connect pallet because we are in ",(0,i.kt)("inlineCode",{parentName:"p"},"dev_mode"),".  However, fees are a reality within the realm of pallet development. "),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Weight")," in Substrate refers to the overall computational, storage, and execution cost of a particular extrinsic (state change).  Weight is the measurement of the amount of time that a state change takes to execute fully.  One unit of weight is equal to one picosecond of execution time on reference hardware.  "),(0,i.kt)("p",null,"Based on this weight, a fee is charged to the sender of the extrinsic."),(0,i.kt)("h2",{id:"an-introduction-to-benchmarking"},"An Introduction to Benchmarking"),(0,i.kt)("p",null,"To calculate an appropriate weight for an extrinsic, Substrate's benchmarking suite can test each extrinsic load to estimate how much weight each state change would take.  A ",(0,i.kt)("inlineCode",{parentName:"p"},"weights.rs")," file is generated via the included CLI and exposes a set of pre-defined weights to use as part of the dispatchable function declaration."),(0,i.kt)("p",null,"Like unit testing, each extrinsic should have a corresponding benchmarking function within ",(0,i.kt)("inlineCode",{parentName:"p"},"benchmarking.rs"),"."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"As a general note, we are using ",(0,i.kt)("strong",{parentName:"p"},"Benchmarking V2")," within this course, which uses procedural macros to declare benchmarking tests.")),(0,i.kt)("h3",{id:"example-baseline-benchmark-for-register"},"Example: Baseline Benchmark for ",(0,i.kt)("inlineCode",{parentName:"h3"},"register")),(0,i.kt)("p",null,"The following test is a simple benchmark that uses several features. Usually, the idea is to ",(0,i.kt)("strong",{parentName:"p"},"benchmark each logical execution path")," for your extrinsic. When calling the extrinsic, we utilize the ",(0,i.kt)("inlineCode",{parentName:"p"},"#[extrinsic_call]")," macro within our benchmarking function."),(0,i.kt)("p",null,"Because our function is quite simple, we only have a single baseline benchmark for our function, ",(0,i.kt)("inlineCode",{parentName:"p"},"register"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},'#[benchmark]\nfn register_an_account() {\n    let caller: T::AccountId = whitelisted_caller();\n\n    T::Currency::make_free_balance_be(&caller, 10u32.into());\n\n    let very_long_name = b"123456789".to_vec();\n    let very_long_bio = b"USOsEy3cAmZudmWyUEMdlU6wVXsZeMj7Ts8rh7Laur3L1ZpvvorGOcZw17mDGtNhmxqYRnANsOxhhfauuRxJhz1PRtHKoXai0i3lT0cTFqpCGODLvRxk8MOiMmVMdoylxwXYMVMwoYuZJQStM9t8k4m9aESUQ5rcCkH408t9s4Yz3WfyvbZfF5bROFgrHug9uk4Iar7Q".to_vec();\n\n    #[extrinsic_call]\n    register(RawOrigin::Signed(caller.clone()), very_long_name, very_long_bio);\n    assert!(<RegisteredUsers<T>>::get(&caller).is_some());\n}\n')))}h.isMDXComponent=!0}}]);