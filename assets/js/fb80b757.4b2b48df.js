"use strict";(self.webpackChunkw3f_education=self.webpackChunkw3f_education||[]).push([[9111],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=u(n),d=a,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||i;return n?r.createElement(m,o(o({ref:t},l),{},{components:n})):r.createElement(m,o({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2870:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return f}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={id:"defining-crate-features",title:"Features in Cargo",sidebar_label:"Specifying features in crates",description:"Specify features for crates to utilize."},c=void 0,u={unversionedId:"Rust/section8/defining-crate-features",id:"Rust/section8/defining-crate-features",isDocsHomePage:!1,title:"Features in Cargo",description:"Specify features for crates to utilize.",source:"@site/docs/Rust/section8/defining-crate-features.md",sourceDirName:"Rust/section8",slug:"/Rust/section8/defining-crate-features",permalink:"/docs/Rust/section8/defining-crate-features",editUrl:"https://github.com/w3f/w3f-education/edit/main/docs/Rust/section8/defining-crate-features.md",version:"current",lastUpdatedBy:"Bader Youssef",lastUpdatedAt:1680715006,formattedLastUpdatedAt:"4/5/2023",frontMatter:{id:"defining-crate-features",title:"Features in Cargo",sidebar_label:"Specifying features in crates",description:"Specify features for crates to utilize."},sidebar:"rust",previous:{title:"Installing a crate",permalink:"/docs/Rust/section8/installing-crate"},next:{title:"Unit Testing",permalink:"/docs/Rust/section8/unit-tests"}},l=[{value:"Specifying features",id:"specifying-features",children:[]}],p={toc:l};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In the last section, we defined the ",(0,i.kt)("inlineCode",{parentName:"p"},"hex")," crate as an external dependency that we could use within our project with a simple name and version of the crate.  However, there are other important factors to consider than declaring a version."),(0,i.kt)("p",null,"In some cases, such as the case in Substrate runtime development, the ",(0,i.kt)("inlineCode",{parentName:"p"},"std")," library may not be available.  This is due to the constraints of running in a Wasm runtime versus a native binary."),(0,i.kt)("p",null,"There are also other cases where ",(0,i.kt)("inlineCode",{parentName:"p"},"std")," may not be available.  For this reason, some crates offer the option of a ",(0,i.kt)("inlineCode",{parentName:"p"},"no-std")," implementation which does not use the Rust Standard Library and can run in these resource-constrained environments."),(0,i.kt)("h2",{id:"specifying-features"},"Specifying features"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"feature")," in the context of Rust crates refers to the ability to conditionally/optionally include (or not include) certain sub-dependencies."),(0,i.kt)("p",null,"To have the ",(0,i.kt)("inlineCode",{parentName:"p"},"hex")," crate be compatible in a ",(0,i.kt)("inlineCode",{parentName:"p"},"no-std")," environment, ",(0,i.kt)("inlineCode",{parentName:"p"},"default-features")," must be declared:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'[dependencies]\nhex = { version = "0.4", default-features = false }\n')),(0,i.kt)("p",null,"This is now more akin to a JSON object, with curly brackets encasing the keys and values within ",(0,i.kt)("inlineCode",{parentName:"p"},"hex"),".  Setting the default features of a crate to ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," will force the crate not to use ",(0,i.kt)("inlineCode",{parentName:"p"},"std"),", as that was the default."),(0,i.kt)("p",null,"Keep in mind that not all crates support no-std environments."))}f.isMDXComponent=!0}}]);