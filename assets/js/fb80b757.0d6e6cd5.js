"use strict";(self.webpackChunkw3f_education=self.webpackChunkw3f_education||[]).push([[9111],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),f=a,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||i;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1436:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={id:"defining-crate-features",title:"Features in Cargo",sidebar_label:"Specifying features in crates",description:"Specify features for crates to utilize."},o=void 0,s={unversionedId:"Rust/section8/defining-crate-features",id:"Rust/section8/defining-crate-features",title:"Features in Cargo",description:"Specify features for crates to utilize.",source:"@site/docs/Rust/section8/defining-crate-features.md",sourceDirName:"Rust/section8",slug:"/Rust/section8/defining-crate-features",permalink:"/docs/Rust/section8/defining-crate-features",draft:!1,editUrl:"https://github.com/w3f/w3f-education/edit/main/docs/Rust/section8/defining-crate-features.md",tags:[],version:"current",lastUpdatedBy:"Radha",lastUpdatedAt:1694695420,formattedLastUpdatedAt:"Sep 14, 2023",frontMatter:{id:"defining-crate-features",title:"Features in Cargo",sidebar_label:"Specifying features in crates",description:"Specify features for crates to utilize."},sidebar:"rust",previous:{title:"Installing a crate",permalink:"/docs/Rust/section8/installing-crate"},next:{title:"Unit Testing",permalink:"/docs/Rust/section8/unit-tests"}},c={},l=[{value:"Specifying features",id:"specifying-features",level:2}],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In the last section, we defined the ",(0,a.kt)("inlineCode",{parentName:"p"},"hex")," crate as an external dependency that we could use within\nour project with a simple name and version of the crate. However, there are other important factors\nto consider than declaring a version."),(0,a.kt)("p",null,"In some cases, such as the case in Substrate runtime development, the ",(0,a.kt)("inlineCode",{parentName:"p"},"std")," library may not be\navailable. This is due to the constraints of running in a Wasm runtime versus a native binary."),(0,a.kt)("p",null,"There are also other cases where ",(0,a.kt)("inlineCode",{parentName:"p"},"std")," may not be available. For this reason, some crates offer the\noption of a ",(0,a.kt)("inlineCode",{parentName:"p"},"no-std")," implementation which does not use the Rust Standard Library and can run in\nthese resource-constrained environments."),(0,a.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/b-PnGu63Xdk?si=w-z4MIDfqAAsOR-K",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),(0,a.kt)("h2",{id:"specifying-features"},"Specifying features"),(0,a.kt)("p",null,"A ",(0,a.kt)("strong",{parentName:"p"},"feature")," in the context of Rust crates refers to the ability to conditionally/optionally\ninclude (or not include) certain sub-dependencies."),(0,a.kt)("p",null,"To have the ",(0,a.kt)("inlineCode",{parentName:"p"},"hex")," crate be compatible in a ",(0,a.kt)("inlineCode",{parentName:"p"},"no-std")," environment, ",(0,a.kt)("inlineCode",{parentName:"p"},"default-features")," must be\ndeclared:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[dependencies]\nhex = { version = "0.4", default-features = false }\n')),(0,a.kt)("p",null,"This is now more akin to a JSON object, with curly brackets encasing the keys and values within\n",(0,a.kt)("inlineCode",{parentName:"p"},"hex"),". Setting the default features of a crate to ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," will force the crate not to use ",(0,a.kt)("inlineCode",{parentName:"p"},"std"),", as\nthat was the default."),(0,a.kt)("p",null,"Keep in mind that not all crates support no-std environments."))}d.isMDXComponent=!0}}]);