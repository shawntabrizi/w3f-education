"use strict";(self.webpackChunkw3f_education=self.webpackChunkw3f_education||[]).push([[3708],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return m}});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(a),p=o,m=u["".concat(s,".").concat(p)]||u[p]||h[p]||r;return a?n.createElement(m,i(i({ref:t},d),{},{components:a})):n.createElement(m,i({ref:t},d))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},7903:function(e,t,a){a.r(t),a.d(t,{contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var n=a(7462),o=a(3366),r=(a(7294),a(3905)),i=["components"],l={id:"maintainers"},s="Validators and Nominators",c={unversionedId:"Polkadot/Module3/maintainers",id:"Polkadot/Module3/maintainers",isDocsHomePage:!1,title:"Validators and Nominators",description:"Beyond distributing data, relay-chain nodes may perform certain protocol-level roles listed",source:"@site/docs/Polkadot/Module3/maintainers.md",sourceDirName:"Polkadot/Module3",slug:"/Polkadot/Module3/maintainers",permalink:"/docs/Polkadot/Module3/maintainers",editUrl:"https://github.com/w3f/w3f-education/edit/main/docs/Polkadot/Module3/maintainers.md",version:"current",lastUpdatedBy:"Radha",lastUpdatedAt:1654881714,formattedLastUpdatedAt:"6/10/2022",frontMatter:{id:"maintainers"},sidebar:"polkadot",previous:{title:"Nominated Proof of Staking",permalink:"/docs/Polkadot/Module3/npos"},next:{title:"Securing the Network",permalink:"/docs/Polkadot/Module3/sharedsecurity"}},d=[{value:"Validators",id:"validators",children:[]},{value:"Nominators",id:"nominators",children:[]},{value:"Collators",id:"collators",children:[]}],u={toc:d},h="wrapper";function p(e){var t=e.components,a=(0,o.Z)(e,i);return(0,r.kt)(h,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"validators-and-nominators"},"Validators and Nominators"),(0,r.kt)("p",null,"Beyond distributing data, relay-chain nodes may perform certain protocol-level roles listed\nhere. Some of these roles have restrictions and conditions associated with them:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Validator: performs the bulk of the security work. Must be a full node of the relay chain.\nInteracts with parachain collators, but need not participate in a parachain as a full node.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Nominator: stakeholder who backs and selects validator candidates. This can\nbe done from a light client, and they need not have any awareness of parachains.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Collator: collects and submits parachain data to the relay chain, subject to protocol rules\ndescribed below. They are chosen as de\u2000ned by the parachain, and must be full nodes of it."))),(0,r.kt)("h2",{id:"validators"},"Validators"),(0,r.kt)("p",null,"A validator is the highest in charge and helps seal new blocks on the Polkadot\nnetwork. The validators role is contingent upon a su\u2000ciently high bond being deposited, though\nwe allow other bonded parties to nominate one or more validators to act for them and as such\nsome portion of the validators bond may not necessarily be owned by the validator itself but\nrather by these nominators. A validator must run a relay-chain client implementation with high\navailability and bandwidth. At each block the node must be ready to accept the role of ratifying\na new block on some parachain, and may be required to double check a few more. This process\ninvolves receiving, validating and republishing candidate blocks. The parachain assignment is\nrandom and changes frequently. Since the validator cannot reasonably be expected to maintain a\nfully-synchronised database of all parachains, the task of devising a suggested new parachain block\nwill be delegated to a third-party, known as a collator. Once all new parachain blocks have been\nproperly rati\u2000ed by their appointed validator subgroups, validators must then ratify the relay-chain\nblock itself. This involves updating the state of the transaction queues (essentially moving data\nfrom a parachains output queue to another parachains input queue), processing the transactions of\nthe rati\u2000ed relay-chain transaction set and ratifying the \u2000nal block, including the \u2000nal parachain\nchanges. A validator provably not ful\u2000lling their role will be slashed i.e. part or all of their bond\nwill be taken. In some sense, validators are similar to the mining pools of current PoW blockchains."),(0,r.kt)("h2",{id:"nominators"},"Nominators"),(0,r.kt)("p",null,"A nominator is a stake-holding party who contributes to the security bond of a\nvalidator. They have no additional role except to place risk capital and as such to signal that they\ntrust a particular validator (or set thereof) to act responsibly in their maintenance of the network.\nThey receive a pro-rata increase or reduction in their deposit according to the bonds growth to\nwhich they contribute. Together with collators, next, nominators are in some sense similar to the\nminers of the present-day PoW networks."),(0,r.kt)("h2",{id:"collators"},"Collators"),(0,r.kt)("p",null,"Transaction collators (collators for short) are parties who assist validators in producing valid parachain blocks.\nThey maintain a full-node for a particular parachain; meaning that\nthey retain all necessary information to be able to author new blocks and execute transactions in\nmuch the same way as block producers do on current blockchains. Under normal circumstances,\nthey will collate and execute transactions to create an unsealed block, and provide it, together\nwith a proof of validity, to one or more validators presently responsible for proposing a parachain\nblock."))}p.isMDXComponent=!0}}]);