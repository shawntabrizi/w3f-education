"use strict";(self.webpackChunkw3f_education=self.webpackChunkw3f_education||[]).push([[3835],{3905:function(t,e,n){n.d(e,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var c=r.createContext({}),u=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},l=function(t){var e=u(t.components);return r.createElement(c.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,c=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),f=u(n),d=o,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||i;return n?r.createElement(m,a(a({ref:e},l),{},{components:n})):r.createElement(m,a({ref:e},l))}));function d(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,a=new Array(i);a[0]=f;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s.mdxType="string"==typeof t?t:o,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},324:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return f}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={id:"section-2-intro",title:"Rust 101 - Intro to Basic Rust",sidebar_label:"Intro to Basic Rust",description:"An introduction to basic Rust."},c=void 0,u={unversionedId:"Rust/section2/section-2-intro",id:"Rust/section2/section-2-intro",isDocsHomePage:!1,title:"Rust 101 - Intro to Basic Rust",description:"An introduction to basic Rust.",source:"@site/docs/Rust/section2/intro.md",sourceDirName:"Rust/section2",slug:"/Rust/section2/section-2-intro",permalink:"/docs/Rust/section2/section-2-intro",editUrl:"https://github.com/w3f/w3f-education/edit/main/docs/Rust/section2/intro.md",version:"current",lastUpdatedBy:"Bader Youssef",lastUpdatedAt:1679608425,formattedLastUpdatedAt:"3/23/2023",frontMatter:{id:"section-2-intro",title:"Rust 101 - Intro to Basic Rust",sidebar_label:"Intro to Basic Rust",description:"An introduction to basic Rust."},sidebar:"rust",previous:{title:"Installing & Setting up a Rust Developer Environment",permalink:"/docs/Rust/setup/installation"},next:{title:"Variables & Mutability",permalink:"/docs/Rust/section2/variables-mutability"}},l=[],p={toc:l};function f(t){var e=t.components,n=(0,o.Z)(t,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The second module will dive right into the very basics of Rust.  Learn how variables, scope, and mutability work together, along with basic data types and how Rust can create functions.  Lastly, learn how to perform iterative operations with loops."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/Rust/section2/variables-mutability"},"Variables & Mutability")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/Rust/section2/data-types"},"Data Types")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/Rust/section2/functions-comments"},"Functions & Comments")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/Rust/section2/loops"},"Loops & Logic Flows"))))}f.isMDXComponent=!0}}]);