"use strict";(self.webpackChunkw3f_education=self.webpackChunkw3f_education||[]).push([[7713],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>b});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),l=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=l(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(r),m=n,b=p["".concat(u,".").concat(m)]||p[m]||d[m]||i;return r?a.createElement(b,o(o({ref:t},c),{},{components:r})):a.createElement(b,o({ref:t},c))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[p]="string"==typeof e?e:n,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6439:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=r(7462),n=(r(7294),r(3905));const i={id:"what-is-substrate",title:"Substrate - powering Web3",sidebar_label:"What is Substrate and FRAME?",description:"Learn what Substrate it is, and why it's the future of building infrastructure in web3."},o=void 0,s={unversionedId:"Substrate/section1/what-is-substrate",id:"Substrate/section1/what-is-substrate",title:"Substrate - powering Web3",description:"Learn what Substrate it is, and why it's the future of building infrastructure in web3.",source:"@site/docs/Substrate/section1/what-is-substrate.md",sourceDirName:"Substrate/section1",slug:"/Substrate/section1/what-is-substrate",permalink:"/docs/Substrate/section1/what-is-substrate",draft:!1,editUrl:"https://github.com/w3f/w3f-education/edit/main/docs/Substrate/section1/what-is-substrate.md",tags:[],version:"current",lastUpdatedBy:"Bader Youssef",lastUpdatedAt:1693238811,formattedLastUpdatedAt:"Aug 28, 2023",frontMatter:{id:"what-is-substrate",title:"Substrate - powering Web3",sidebar_label:"What is Substrate and FRAME?",description:"Learn what Substrate it is, and why it's the future of building infrastructure in web3."},sidebar:"substrate",previous:{title:"Why Learn Substrate?",permalink:"/docs/Substrate/section1/"},next:{title:"History Behind Substrate",permalink:"/docs/Substrate/section1/substrate-history"}},u={},l=[{value:"Substrate&#39;s Libraries",id:"substrates-libraries",level:2},{value:"A Brief Introduction to FRAME (Framework for Runtime Aggregation of Modularized Entities)",id:"a-brief-introduction-to-frame-framework-for-runtime-aggregation-of-modularized-entities",level:2}],c={toc:l},p="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Substrate is a modular framework that enables you to create domain-specific blockchains by composing\ncustom or pre-built components. The ",(0,n.kt)("em",{parentName:"p"},"Framework for Runtime Aggregation of Modularized Entities\n(",(0,n.kt)("strong",{parentName:"em"},"FRAME"),")")," is a set of modules and support libraries that simplify runtime development. In\nSubstrate, these modules are called ",(0,n.kt)("strong",{parentName:"p"},"pallets"),", each hosting domain-specific logic to include in a\nchain's runtime."),(0,n.kt)("p",null,"Substrate may be utilized to create a solo chain or a parachain for a relay chain like Polkadot or\nKusama. At its core, it is a set of Rust crates that provide the most basic primitives and protocols\nto implement a distributed state machine, such as a blockchain."),(0,n.kt)("admonition",{title:"An analogy: React, the library for web and native user interfaces",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Another way to think about Substrate is similar to how a web developer may use/think about React.\nWhere React provides core libraries for manipulating the elements of the DOM via developer-defined\ncomponents, Substrate also provides the base libraries and primitives needed to create a blockchain.\nIt was designed to not be opinionated via a highly generic codebase, enabling high customizability.")),(0,n.kt)("h2",{id:"substrates-libraries"},"Substrate's Libraries"),(0,n.kt)("p",null,"Substrate, as mentioned, is a collection of Rust crates that define a generic way to implement a\nblockchain. Although you will only use a few of these libraries directly in this course, know that\neverything you use is built upon them."),(0,n.kt)("p",null,"You will encounter two primary prefixes when developing with Substrate crates: ",(0,n.kt)("inlineCode",{parentName:"p"},"sc-")," (",(0,n.kt)("strong",{parentName:"p"},"Substrate\nClient"),") and ",(0,n.kt)("inlineCode",{parentName:"p"},"sp-")," (",(0,n.kt)("strong",{parentName:"p"},"Substrate Primitive"),"). Crates prefixed with ",(0,n.kt)("inlineCode",{parentName:"p"},"sc-")," usually refer to\nnetwork-related functionalities, such as peer-to-peer networking or consensus. The ",(0,n.kt)("inlineCode",{parentName:"p"},"sp-")," prefix\nusually indicates that the library provides primitives for a particular aspect of Substrate, such as\nruntime-related primitives."),(0,n.kt)("p",null,"A few significant crates that you will encounter are:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crates.parity.io/sp_runtime/index.html"},(0,n.kt)("inlineCode",{parentName:"a"},"sp_runtime"))," - Runtime modules shared primitive\ntypes"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crates.parity.io/sp_core/index.html"},(0,n.kt)("inlineCode",{parentName:"a"},"sp_core"))," - Shareable Substrate types"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crates.parity.io/sp_io/index.html"},(0,n.kt)("inlineCode",{parentName:"a"},"sp_io"))," - I/O host interface for substrate runtime.\nSubstrate runtime standard library as compiled when linked with Rust\u2019s standard library.")),(0,n.kt)("p",null,"These, along with many more, all pertain to building certain aspects of a particular distributed\nsystem."),(0,n.kt)("h2",{id:"a-brief-introduction-to-frame-framework-for-runtime-aggregation-of-modularized-entities"},"A Brief Introduction to FRAME (Framework for Runtime Aggregation of Modularized Entities)"),(0,n.kt)("mermaid",{value:"---\ntitle: Substrate's Relationship with FRAME\n---\nflowchart LR\n    S[Substrate Core Libraries] --\x3e SP[sp_*]\n    S --\x3e SC[sc_*]\n    S --\x3e FR[frame_*]\n    SC --\x3e FRAME[FRAME - Framework for Runtime Aggregation of Modularized Entities]\n    FR --\x3e FRAME\n    SP --\x3e FRAME"}),(0,n.kt)("p",null,"A common question is: ",(0,n.kt)("em",{parentName:"p"},"If Substrate exists, what is FRAME for? Why is it mentioned so often?"),"."),(0,n.kt)("p",null,"FRAME, or Framework for Runtime Aggregation of Modularized Entities, is another abstraction on top\nof Substrate. It introduces a set of conventions and structures for building a blockchain with\nSubstrate through numerous Rust macros. These macros enable the powerful and trivial to use a system\nof ",(0,n.kt)("strong",{parentName:"p"},"pallets")," to construct ",(0,n.kt)("strong",{parentName:"p"},"runtimes")," using Substrate. A ",(0,n.kt)("strong",{parentName:"p"},"runtime"),", also called a ",(0,n.kt)("strong",{parentName:"p"},"state\ntransition function (STF)"),", defines the state transitions for a particular blockchain."),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"As we advance, terminologies such as ",(0,n.kt)("strong",{parentName:"p"},"pallets"),", and custom bundles of business logic that make up\na runtime will be expected. If a term here is unfamiliar and undefined, reference the glossary.")),(0,n.kt)("p",null,"Remember, a state machine is the core concept of a blockchain. FRAME facilitates the way for state\nto propagate and change in a more developer-friendly way."),(0,n.kt)("p",null,"The outcome of developing on Substrate, particularly FRAME, is almost always a ",(0,n.kt)("strong",{parentName:"p"},"runtime")," (compiled\nto WebAssembly, or Wasm), also called a ",(0,n.kt)("strong",{parentName:"p"},"state transition function (STF)"),". This runtime defines\nthe core logic that determines how state propagates and changes in a blockchain. In the coming\nlessons, you will learn more about how a runtime works and eventually dive deeper into its\nstructure."))}d.isMDXComponent=!0}}]);