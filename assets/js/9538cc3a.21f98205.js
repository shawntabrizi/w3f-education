"use strict";(self.webpackChunkw3f_education=self.webpackChunkw3f_education||[]).push([[7271],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(a),h=r,g=p["".concat(c,".").concat(h)]||p[h]||u[h]||o;return a?n.createElement(g,i(i({ref:t},d),{},{components:a})):n.createElement(g,i({ref:t},d))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},22195:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=a(87462),r=(a(67294),a(3905));const o={id:"sudo-register",title:"Using Sudo to register your parachain",sidebar_label:"Using Sudo to register your parachain",description:"Creating and registering your parathread via sudo."},i=void 0,s={unversionedId:"Parachain/beginner/section3/sudo-register",id:"Parachain/beginner/section3/sudo-register",title:"Using Sudo to register your parachain",description:"Creating and registering your parathread via sudo.",source:"@site/docs/Parachain/beginner/section3/sudo-register.md",sourceDirName:"Parachain/beginner/section3",slug:"/Parachain/beginner/section3/sudo-register",permalink:"/docs/Parachain/beginner/section3/sudo-register",draft:!1,editUrl:"https://github.com/w3f/w3f-education/edit/main/docs/Parachain/beginner/section3/sudo-register.md",tags:[],version:"current",lastUpdatedBy:"Bader Youssef",lastUpdatedAt:1694712644,formattedLastUpdatedAt:"Sep 14, 2023",frontMatter:{id:"sudo-register",title:"Using Sudo to register your parachain",sidebar_label:"Using Sudo to register your parachain",description:"Creating and registering your parathread via sudo."},sidebar:"parachain",previous:{title:"Reserve your parathread",permalink:"/docs/Parachain/beginner/section3/creating-parathread"},next:{title:"Developing your parachain with FRAME",permalink:"/docs/Parachain/beginner/section3/developing-parachain"}},c={},l=[{value:"A Brief Introduction to the Sudo Pallet",id:"a-brief-introduction-to-the-sudo-pallet",level:2},{value:"Using Sudo as Governance in Polkadot.js",id:"using-sudo-as-governance-in-polkadotjs",level:2},{value:"Ensuring Collation",id:"ensuring-collation",level:2}],d={toc:l},p="wrapper";function u(e){let{components:t,...o}=e;return(0,r.kt)(p,(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Typically, a parachain slot auction would have to take place to achieve a connection with the relay chain.  These auctions can take some time - usually one week, with multiple parachains competing for a slot in the relay chain.  "),(0,r.kt)("p",null,"One possibility is to modify our relay chain's code to lower auction times.  However, this still is unideal for development purposes."),(0,r.kt)("p",null,"A significant side effect of running our local relay chain includes bypassing that process via our type of governance - ",(0,r.kt)("inlineCode",{parentName:"p"},"sudo"),"."),(0,r.kt)("h2",{id:"a-brief-introduction-to-the-sudo-pallet"},"A Brief Introduction to the Sudo Pallet"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://paritytech.github.io/polkadot-sdk/master/pallet_sudo/index.html"},(0,r.kt)("inlineCode",{parentName:"a"},"sudo"))," pallet executes calls that require ",(0,r.kt)("inlineCode",{parentName:"p"},"Root"),' origin with any keys that are declared as "sudo".  In most development environments, ',(0,r.kt)("inlineCode",{parentName:"p"},"Alice")," is one of these keys.  Adding more keys if needed via the ",(0,r.kt)("inlineCode",{parentName:"p"},"set_key")," extrinsic is also possible."),(0,r.kt)("p",null,"It primarily acts as a wrapper for other calls.  It is not meant to be used in pallets directly but rather merely execute privileged calls that require the ",(0,r.kt)("inlineCode",{parentName:"p"},"Root")," origin."),(0,r.kt)("h2",{id:"using-sudo-as-governance-in-polkadotjs"},"Using Sudo as Governance in Polkadot.js"),(0,r.kt)("p",null,"Using the ",(0,r.kt)("inlineCode",{parentName:"p"},"sudo")," pallet, we can bypass the auction process and register the parachain directly.  "),(0,r.kt)("admonition",{title:"Make sure your collator is running!",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"To register our parachain, we need both our relay chain creating blocks and our parachain's collator running.")),(0,r.kt)("p",null,"Navigate to the ",(0,r.kt)("a",{parentName:"p",href:"https://polkadot.js.org/apps/?rpc=ws%3A%2F%2F127.0.0.1%3A9944#/explorer"},"Polkadot.js Developer Console"),", and select the ",(0,r.kt)("inlineCode",{parentName:"p"},"Sudo")," tab:"),(0,r.kt)("p",null,"Once here, select the ",(0,r.kt)("inlineCode",{parentName:"p"},"parasSudoWrapper")," in the dropdown:"),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(1434).Z,width:"1498",height:"508"})),(0,r.kt)("p",null,"Upload the genesis (",(0,r.kt)("inlineCode",{parentName:"p"},"parachain-genesis-state"),") and runtime (",(0,r.kt)("inlineCode",{parentName:"p"},"parachain-wasm"),") from the ",(0,r.kt)("inlineCode",{parentName:"p"},"parachain-guide-resources")," repository:"),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(12363).Z,width:"1498",height:"676"})),(0,r.kt)("p",null,'In the "Events" tab in the explorer, you should see two events - ',(0,r.kt)("inlineCode",{parentName:"p"},"sudo.Sudid")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"paras.PvfCheckAccepted"),".  These should indicate that the parachain's runtime has been successfully registered, and the collator will start syncing with the relay chain."),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(79691).Z,width:"911",height:"567"})),(0,r.kt)("h2",{id:"ensuring-collation"},"Ensuring Collation"),(0,r.kt)("p",null,"Your collator should have output similar to the following: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"2023-09-13 13:03:48 [Parachain] \ud83d\ude4c Starting consensus session on top of parent 0x8d239901c4ee0eca7b10f97744bd2812e2682cd92a3e15c254931fb631af6289\n2023-09-13 13:03:48 [Parachain] \ud83c\udf81 Prepared block for proposing at 198 (1 ms) [hash: 0xd5ab5c88bbc45c00500059d001303961fc43c2821f21c9939b44be5ec983dfb9; parent_hash: 0x8d23\u20266289; extrinsics (2): [0xc24e\u2026cf43, 0xc8c9\u202686a5]\n2023-09-13 13:03:48 [Parachain] \ud83d\udd16 Pre-sealed block for proposal at 198.  Hash now 0x17eb48b6a0cca5cabfa3651961732b4095fa9a7edc77066ba310d3243342fba2, previously 0xd5ab5c88bbc45c00500059d001303961fc43c2821f21c9939b44be5ec983dfb9.\n2023-09-13 13:03:48 [Parachain] \u2728 Imported #198 (0x17eb\u2026fba2)\n2023-09-13 13:03:48 [Parachain] PoV size { header: 0.21875kb, extrinsics: 3.1298828125kb, storage_proof: 3.2939453125kb }\n2023-09-13 13:03:48 [Parachain] Compressed PoV size: 6.048828125kb\n2023-09-13 13:03:48 [Parachain] Produced proof-of-validity candidate. block_hash=0x17eb48b6a0cca5cabfa3651961732b4095fa9a7edc77066ba310d3243342fba2\n")),(0,r.kt)("p",null,"In Polkadot.js, you should also see block production occurring on both the relay and parachain:"),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(19929).Z,width:"1902",height:"654"})),(0,r.kt)("p",null,"If not, you may have forgotten to specify a bootnode.  You may restart your collator and specify a relay chain validator using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--bootnodes")," flag."))}u.isMDXComponent=!0},19929:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/collation_occuring-770270e7a3db02b495e1fd2971f3f14a.png"},1434:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/paras_sudo_wrapper-101e66fa2cdd64c74875d8af6ed355ed.png"},79691:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/successful_pvf-4b88e2fd08b49d1891223a2236f52206.png"},12363:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/sudo_schedule_filled-d1b526475e98e66deaccb2ab06dce4eb.png"}}]);