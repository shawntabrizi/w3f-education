"use strict";(self.webpackChunkw3f_education=self.webpackChunkw3f_education||[]).push([[30],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>m});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),d=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},c=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(o),h=r,m=p["".concat(l,".").concat(h)]||p[h]||u[h]||a;return o?n.createElement(m,i(i({ref:t},c),{},{components:o})):n.createElement(m,i({ref:t},c))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var d=2;d<a;d++)i[d]=o[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}h.displayName="MDXCreateElement"},2633:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var n=o(87462),r=(o(67294),o(3905));const a={id:"networking"},i="Networking",s={unversionedId:"Polkadot/Module4/networking",id:"Polkadot/Module4/networking",title:"Networking",description:"All validators have their own local clock and their clocks do not rely on any central clock. We",source:"@site/docs/Polkadot/Module4/networking.md",sourceDirName:"Polkadot/Module4",slug:"/Polkadot/Module4/networking",permalink:"/docs/Polkadot/Module4/networking",draft:!1,editUrl:"https://github.com/w3f/w3f-education/edit/main/docs/Polkadot/Module4/networking.md",tags:[],version:"current",lastUpdatedBy:"Bader Youssef",lastUpdatedAt:1693238811,formattedLastUpdatedAt:"Aug 28, 2023",frontMatter:{id:"networking"},sidebar:"polkadot",previous:{title:"Cryptography",permalink:"/docs/Polkadot/Module4/cryptography"},next:{title:"Nodes on Polkadot Network",permalink:"/docs/Polkadot/Module4/nodes"}},l={},d=[{value:"Gossipping",id:"gossipping",level:2},{value:"Networking Complexity",id:"networking-complexity",level:2}],c={toc:d},p="wrapper";function u(e){let{components:t,...o}=e;return(0,r.kt)(p,(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"networking"},"Networking"),(0,r.kt)("p",null,"All validators have their own local clock and their clocks do not rely on any central clock. We\nassume that validators and collators are in a partially synchronous network. It means that a message\nsent by a validator or a collator arrives at all parties in the network at most ",(0,r.kt)("em",{parentName:"p"},"d")," units of time\nlater where ",(0,r.kt)("em",{parentName:"p"},"d")," is an unknown parameter. So, we assume an eventual delivery of a message in\nPolkadot."),(0,r.kt)("p",null,"Polkadot's networking needs to extend the peer-to-peer gossip network that is standard in single\nchain permissionless blockchains to a multi-chain system, where any nodes network traffic should not\nscale with the total data of the system."),(0,r.kt)("h2",{id:"gossipping"},"Gossipping"),(0,r.kt)("p",null,"This subprotocol is used for most relay-chain artefacts, where everyone needs to see more-or-less\nthe same public information. Part of its structure is also used for when a node goes offline for a\nlong time and needs to synchronise any newer data it hasn't seen before. The Polkadot relay chain\nnetwork forms a gossip overlay network on top of the physical commu- nications network, as an\nefficient way to provide a decentralised broadcast medium. The network consists of a known number of\ntrusted nodes (validators) who have been permissioned via staking, and an unknown number of\nuntrusted nodes (full nodes that don't perform validation) from the permissionless open internet.\n(As an aside, recall that some of the untrusted nodes may have other roles as defined earlier, e.g.\nparachain collator, fishermen, etc.) A simple push-based approach is implemented currently, with\nhash-based tracker caches to avoid sending duplicates to peers, and a few restrictions to avoid the\nmost common spam attacks:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Artefacts may only be received in dependency order; peers are not allowed to send them out-\nof-order. Though this decreases network-level efficiency, it is straightforward to implement and\nprovides a healthy level of security.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To efficiently communicate to sending peers what they are allowed to send in dependency order,\nperiodically peers update each other with their view of the latest heads of the chain."))),(0,r.kt)("p",null,"There are also more specific constraint rules applied to artefacts belonging to the various higher-\nlevel subprotocols using the gossip protocol, to avoid broadcasting obsolete or otherwise unneeded\nartefacts. For example, for GRANDPA we only allow two votes being received for each type of vote,\nround number, and voter; any further votes will be ignored. For block production only valid block\nproducers are allowed to produce one block per round; any further blocks will be ignored. There is\nbasic support for sentry nodes, proxy servers that are essentially the only neighbour of a private\nserver, running more security-critical operations such the validator role. The network topology is a\nweak point currently; nodes connect to each other on an ad-hoc basis by performing random lookups in\nthe address book. Further work will proceed along two fronts:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Trusted nodes will reserve a portion of their bandwidth and connection resources, to form a\nstructured overlay with a deterministic but unpredictable topology that rotates every era. For\nnodes running behind sentries, this effectively means that their sentry nodes instead participate\nin this topology."),(0,r.kt)("li",{parentName:"ol"},"For the remainder of trusted nodes' resource capacity, and for the whole of untrusted nodes'\nresource capacity, they will select neighbours via a scheme based on latency measurements, with\nthe details to be decided. Notably, for good security properties we want a scheme that does not\nsimply choose \"closest first\", but also some far links as well. In some sense, this can be viewed\nas the trusted nodes forming a core with the untrusted nodes around it - but note that trusted\nnodes are expected to use some of their resources to serve untrusted nodes as well. Both\ntopologies are chosen to mitigate eclipse attacks, as well as sybil attacks in the permissionless\nuntrusted case. Further work will also include some sort of set reconciliation protocol, to\nfurther reduce re- dundancy when many senders attempt to send the same object to the same\nrecipient at once; and potentially look into lifting the dependency-order restriction whilst\nretaining security.")),(0,r.kt)("h2",{id:"networking-complexity"},"Networking Complexity"),(0,r.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/yvlUBL1GNdk",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}))}u.isMDXComponent=!0}}]);